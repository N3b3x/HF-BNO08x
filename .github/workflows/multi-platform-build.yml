name: CI \xE2\x80\xA2 Multi Platform Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  IDF_TARGET: esp32c6
  BUILD_PATH: ci_project

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [esp32, arduino, stm32]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install toolchains
        run: |
          sudo apt-get update
          if [ "${{ matrix.platform }}" = "stm32" ]; then
            sudo apt-get install -y gcc-arm-none-eabi
          fi
          if [ "${{ matrix.platform }}" = "arduino" ]; then
            sudo apt-get install -y arduino-cli
          fi
          if [ "${{ matrix.platform }}" = "esp32" ]; then
            sudo apt-get install -y wget python3-pip
            pip install espressif==1.6.0
          fi

      - name: ESP32 build
        if: matrix.platform == 'esp32'
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: release-v5.5
          target: ${{ env.IDF_TARGET }}
          path: .
          command: |
            idf.py create-project ${{ env.BUILD_PATH }}
            cp examples/esp32/CMakeLists.txt ${{ env.BUILD_PATH }}/CMakeLists.txt
            rm -rf ${{ env.BUILD_PATH }}/main
            cp -r examples/esp32/main ${{ env.BUILD_PATH }}/main
            idf.py -C ${{ env.BUILD_PATH }} -DIDF_TARGET=${{ env.IDF_TARGET }} build

      - name: Arduino build
        if: matrix.platform == 'arduino'
        uses: arduino/compile-sketches@v1
        with:
          sketch-paths: examples/arduino
          fqbn: arduino:avr:uno
          libraries: |
            src
          cli-compile-flags: |
            --warnings default
          cli-verbose: false

      - name: STM32 build
        if: matrix.platform == 'stm32'
        run: bash examples/build.sh stm32
